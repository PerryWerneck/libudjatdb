<?xml version="1.0" encoding="UTF-8" ?>

<config>

	<module name='civetweb' required='no' />
	<module name='information' required='no' />

	<!--
		Use attribute for database URL to avoid repetitions.
	-->
	<attribute name='database-connection' value='sqlite3:db=/tmp/test.sqlite' />

	<!--
	
		Run SQL script on service startup.
	
	-->
	<init type='sql'>
		create table if not exists sample (id integer primary key, inserted timestamp default CURRENT_TIMESTAMP, name text, value text);
	</init>
	
	<!-- Internal agent, just for testing factory conflicts -->
	<agent type='integer' name='intvalue' value='0' />
	
	<!-- Build an SQL Based agent -->
	<agent type='sql' name='count' value-type='integer' retry-interval='14400' update-timer='14400'>
		select count (*) as value from sample
	</agent>
	
	<!-- Special type of SQL Agent keeping a queue of URLs -->
	<agent type='sql' name='alerts' url-queue-name='sql' update-timer='60' >
	
		<attribute name='summary' value='Alerts on queue' />
		<attribute name='label' value='Alert queue' />
	
		<!-- Initialize an URL queue -->
		<init>
			create table if not exists alerts (id integer primary key, inserted timestamp default CURRENT_TIMESTAMP, url text, action text, payload text)
		</init>
		
		<!-- Update Queue size -->
		<refresh>
			select count (*) as value from alerts
		</refresh>

		<!-- Store URL on database -->
		<insert>
			insert into alerts (url,action,payload) values (${url},${action},${payload})
		</insert>

		<!-- Get data to send -->
		<send>
			select id,url,action,payload from alerts limit 1
		</send>
		
		<!-- Delete ID after sending it -->
		<after-send>
			delete from alerts where id=${id}
		</after-send>
	
	</agent>
	
	<!--
	<api-call type='sql' name='insert' action='get' response-type='value'>
		insert into sample (name,value) values (${1},${2});
		select last_insert_rowid() as id;
	</api-call>

	<api-call type='sql' name='list' action='get' response-type='table'>
		select * from sample
	</api-call>
	
	<api-call type='sql' name='pending' action='get' response-type='table'>
		select * from alerts
	</api-call>
	-->

	<!-- alert type='sql' name='orphaned'>
		insert into sample (name,value) values ("alert","orphaned");
	</alert -->

	<!-- queued alert -->	
	<alert name='hello' url='sql+http://127.0.0.1/cgi-bin/post_receiver' action='post'>
		{"Message":"I'm Alive","timestamp":"${timestamp(%Y/%m/%d %H:%M:%S)}"}
	</alert>
	
</config>

